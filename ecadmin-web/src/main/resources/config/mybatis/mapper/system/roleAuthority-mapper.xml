<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="hy.role.roleAuthority" >
	<select id="queryRolesList" parameterType="pp" resultType="map">
		SELECT
			r.role_id,
			r.role_name,
			r.role_string,
			r.role_type,
			r.role_status,
			r.role_creater,
			ifnull(u.user_name, '系统默认') AS role_creater_name,
			r.role_create_time
		FROM
			hy_user_roles r
		LEFT JOIN hy_user u ON u.USER_ID = r.ROLE_CREATER
		WHERE
			1 = 1
		AND r.ROLE_STATUS = 1
	</select>
	
	<resultMap id="RoleMap" type="com.yinhai.ec.common.domain.UserRolesDomain" >
	    <id column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
	    <result column="ROLE_NAME" property="roleName" jdbcType="VARCHAR" />
	    <result column="ROLE_STRING" property="roleString" jdbcType="VARCHAR" />
	    <result column="ROLE_TYPE" property="roleType" jdbcType="TINYINT" />
	    <result column="ROLE_STATUS" property="roleStatus" jdbcType="TINYINT" />
	    <result column="ROLE_CREATER" property="roleCreater" jdbcType="INTEGER" />
	    <result column="ROLE_CREATE_TIME" property="roleCreateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<select id="selectRoleByPrimaryKey" resultMap="RoleMap" parameterType="pp">
	    select 
	    	ROLE_ID, ROLE_NAME, ROLE_STRING, ROLE_TYPE, ROLE_STATUS, ROLE_CREATER, ROLE_CREATE_TIME
	    from hy_user_roles
	    where ROLE_ID = #{role_id,jdbcType=INTEGER}
	</select>
	
	<select id="queryMenuList" parameterType="pp" resultType="map">
	  	select
			hm.menu_id,
			hm.parent_id,
			hm.menu_name,
			hm.menu_url,
			hm.menu_icon,
			hm.menu_status,
			hm.menu_creater,
			hm.menu_create_time
		from
			hy_menu as hm
		where hm.menu_status = 1
	</select>
	
	<!-- 查询角色详细权限 -->
	<select id="queryAuthorityListByRoleId" parameterType="pp" resultType="map">
		select 
			ma.auth_id,
			ma.role_id,
			m.menu_id,
			ma.role_create,
			ma.role_delete,
			ma.role_query,
			ma.role_update,
			m.menu_name,
			m.menu_url
		from hy_menu_auth ma left join hy_menu m on ma.menu_id = m.menu_id and m.menu_status = 1
		where ma.role_id = #{role_id,jdbcType=INTEGER}
		and ma.is_parent = 0
	</select>
	
	<select id="queryMenuAuthorityIdsByRoleId" parameterType="pp" resultType="string">
		select
			group_concat(ma.menu_id) as menu_ids
		from hy_menu_auth ma
		where ma.role_id = #{role_id,jdbcType=INTEGER}
		and ma.is_parent = 0
	</select>
	
	<!-- 批量插入角色权限 -->
	<insert id="inserRoleAuthBatch" parameterType="java.util.List">
		insert into hy_menu_auth (ROLE_ID, MENU_ID, IS_PARENT, ROLE_STRING)
	      values
	      <foreach collection="list" item="item" separator=",">
	      	(#{item.roleId,jdbcType=INTEGER}, #{item.menuId,jdbcType=INTEGER}, 
		      #{item.isParent,jdbcType=TINYINT}, #{item.roleString,jdbcType=VARCHAR}
		      )
	      </foreach>
	</insert>
	
	<!-- 根据角色ID删除所有角色权限信息 -->
	<delete id="deleteRoleAuthByRoleId" parameterType="integer">
		delete from hy_menu_auth where role_id = #{value,jdbcType=INTEGER}
	</delete>
	
	<update id="updateMenuAuthorityOne" parameterType="map">
		update hy_menu_auth
		set ${field} = #{status,jdbcType=INTEGER}
		where ROLE_ID = #{role_id,jdbcType=INTEGER}
		and MENU_ID = #{menu_id,jdbcType=INTEGER}
	</update>
</mapper>